<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAB
        1wAAAdcBjJIIaAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAPBSURBVHhe7dtZ
        qE1RHMfxY55lTkgiIQkpUTJFyfAiQ3kwZFYeDC8KkelBQl4MD8pQEsoQhSK8kExJRGTMkHmW6fs/dW+7
        c//nrv9e+wz77M6vPg/3ds7aa9W9e639/5+TKqeccgqRnuhn1Bm1kaisxL8QfuEkhiIRaYDH0BZbnb9Y
        hURkMrRFWsxByacGLkBboMtXdETJpy9+Q1ukywEkIrugLdBiMEo+bfAB2gJdrqEmSj5LoS3QYgZiG7nR
        WVIX96At0OUlmiKWkT1bTn2WjIO2QIsNiF1km5Lt6nT6J1tOQVugy090RaxyCBUTHC2/MKQH5NgbXJzV
        YcQmgyDH1orJ3Yf8n1uyFcGFhTESRU8t3EDm5BbBkuZ4g8z3W9xG0Z8c50Gb3Ee0hSULoI1hMRdFSzO8
        hjYxsR2WyF/RTWhjuMj1ZR5FyWZok6rwB1LksGQ4tDEsNqHg6Q7LHfwirAekI9DGcJF5dENBIxUbbTKa
        CbBEymHfoY3hchwFyxhok8jmCRrCEjnlaWNYjELeUwd3oU2gOsthSWM8hzaGyx3I/PKaxdAu7hKmqjMd
        2hgWC5G3tMZ7aBe22ANL5KZ5GdoYLu/QCnnJDmgXtZLjshybLRmI4PE6jG3IefrAt54XdBXWqs4+aGO4
        yDx7Iac5D+1iPqbCkvb4Am0Ml7PIWSZCu4ivMFWdsF2lICm6RE59PIJ2gSjWwRLpKvle/wHqIVJWQBs8
        qjBVnUnQxrBYAu9E+R+0CFPV8b0HfYL1sbxK9kIbNJesVZ0ou5Bs36EzAL77cBhhqjo7oY3hEuaxPJ0o
        JzEf82GJdJV8T6LnYE6Us7iPt2gJS+Smpo1hMR6mNIIUKwvJ+hQn1Wafp1HxELKtl3zGQlugxTIkIr5d
        pc9oh5JPlK7SbiQiW6At0EW2xf4o+cjN07erdAmJiJwhtAVaxKK3GDXSVboFbYEuR5GIDIO2QBd5zE7X
        z87ElNyt89lVkkfy1IjAL+JoCizx6SpJwyadE9BeEAfPIEdzS9ZDGyObyupxF/yA9qI4WA1LwnSVZL0d
        UJmN0F4YB9/QCZZMgzZGpiot9SZ4Ae3FcWD9rLCllvEK6ocqZkJ7Q1wMgSWuatZsqJGOzRVob4qD65CD
        jyXZ6pnOMaL05AphFizJVtE2/RUVohrsK0xXKbOncRCmyA3iKYJvjhPZsSwJdrXkkGTdSdLpDZ8vOhVC
        mK5SRV9zTfqnkJEPGqyF/NllTqLYjsGa/ZBDUqS0gHRngl9yLDbr5wwS8S2TcsrJeVKp/4tfQler2jws
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>